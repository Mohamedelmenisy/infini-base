/* ========== الخطوط والألوان العامة (Design Tokens) ========== */
:root {
  --bg-main: #0b1220;
  --bg-content: #0f1724;
  --bg-quick-review: #0d1320;
  --bg-level-box: #1e2d42;
  --text-main: #e6eef8;
  --text-secondary: #9ca3af;
  --color-link: #c7d2fe;
  --color-pill: #6d28d9;
  --color-highlight: #93c5fd;
  --border-color: #1e293b;
  --font-family: 'Cairo', sans-serif;
}

/* تطبيق الخلفية والخط الأساسي على الحاوية الرئيسية (Full Width) */
.kb-app {
  font-family: var(--font-family);
  background-color: var(--bg-main);
  color: var(--text-main);
  padding: 0;
  margin: 0;
  width: 100%;
  box-sizing: border-box;
  font-size: 15px;
}

/* HIDE SCROLLBAR AS REQUESTED */
.kb-app::-webkit-scrollbar { 
  display: none; 
}


/* FIX: Full-width background and content container (REQUEST 2) */
.kb-container {
  width: 100%;
  max-width: none;
  margin: 0;
  padding: 20px;
  box-sizing: border-box;
}

/* Keyframes for Fade-in Up Effect */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fade-in {
  animation: fadeInUp 0.6s ease-out forwards;
}


/* ========== تنسيق البانر وزر اللغة ========== */
.header-banner {
  width: 100%;
  padding: 1rem 0;
  margin-bottom: 1.5rem;
  box-sizing: border-box;
}

.header-banner img {
  width: 220px;
  height: auto;
  margin: 0 auto;
  display: block;
  border-radius: 8px;
}

.language-toggle-wrapper {
  margin: 0 auto 1.5rem auto;
  padding: 0 1.5rem;
  text-align: center;
}

#lang-toggle-button {
  display: inline-block;
  margin: 1rem auto;
  padding: 0.7rem 1.5rem;
  font-weight: 700;
  font-family: var(--font-family);
  border-radius: 9999px;
  background-color: #3b82f6;
  color: #fff !important;
  text-align: center;
  transition: 0.2s;
  border: none;
  cursor: pointer;
  box-shadow: 0 2px 8px rgba(0,0,0,0.2);
}
#lang-toggle-button:hover { 
  background-color: #2563eb; 
  transform: translateY(-2px); 
}


/* ========== تنسيق العناوين والنص ========== */
.kb-app h1 { display: none; }

.kb-app h2 {
  font-size: 1.2rem;
  font-weight: 700;
  color: var(--color-highlight);
  margin: 2rem 0 1rem 0;
  padding: 0.5rem 0;
  border-bottom: 1px solid rgba(255, 255, 255, 0.08);
}

.kb-app h3 {
  font-size: 1.1rem;
  font-weight: 600;
  color: var(--text-main);
  margin: 1.5rem 0 1rem 0;
  padding: 0.5rem 0;
}

.level-heading-box {
  background-color: var(--bg-level-box);
  border: 1px solid var(--border-color);
  border-radius: 8px;
  padding: 1rem;
  margin: 0 0 1.5rem 0;
}

.level-heading-box h3 {
  margin: 0;
  padding: 0;
  border: none;
  font-size: 1.2rem;
  color: var(--color-highlight);
}

.kb-app[dir="rtl"] .level-heading-box h3 {
  border-right: 3px solid var(--color-highlight);
  padding-right: 10px;
}
.kb-app[dir="ltr"] .level-heading-box h3 {
  border-left: 3px solid var(--color-highlight);
  padding-left: 10px;
}

.kb-app p, .kb-app li {
  font-size: 16px;
  line-height: 1.8;
  font-weight: 400; /* Increased from thin */
  color: #e6eef8;
  margin: 0 0 1rem 0;
}


.kb-app .note {
  font-size: 0.95rem;
  color: var(--text-secondary);
  font-style: italic;
  display: block;
  margin-top: 1rem;
  padding: 1rem;
  border-radius: 6px;
  background-color: rgba(156, 163, 175, 0.05);
}

.kb-app a {
  color: var(--color-link);
  text-decoration: none;
  transition: color 0.3s;
}
.kb-app a:hover {
  color: #a5b4fc;
  text-decoration: underline;
}

/* ========== تنسيق البطاقات والقوائم ========== */
.kb-card {
  background-color: var(--bg-content);
  border: 1px solid var(--border-color);
  border-radius: 12px;
  padding: 1.5rem;
  margin: 0 auto 2rem auto;
  box-shadow: 0 3px 8px rgba(0,0,0,0.15);
}

.kb-app ul { list-style-type: none; padding: 0; margin: 1rem 0; }
.kb-card ul li { position: relative; margin-bottom: 0.75rem; }

#ar-content ul li::before {
  content: "•"; color: var(--color-link); font-weight: bold;
  display: inline-block; width: 1em; margin-right: -1em; position: absolute; right: 0; top: 0;
}
#ar-content ul li { padding-right: 1.5rem; }

#en-content ul li::before {
  content: "•"; color: var(--color-link); font-weight: bold;
  display: inline-block; width: 1em; margin-left: -1em; position: absolute; left: 0; top: 0;
}
#en-content ul li { padding-left: 1.5rem; }

/* ========== صندوق المراجعة السريعة (Quick Overview) ========== */
.quick-review-box {
  background-color: var(--bg-quick-review);
  border: 1px solid rgba(255, 255, 255, 0.15);
  border-radius: 12px;
  padding: 1.5rem;
  margin: 0 auto 2rem auto;
}
.quick-review-box h3 { margin-top: 0; padding-top: 0; color: #f87171; }
.kb-app[dir="rtl"] .quick-review-box h3 { border-right: 3px solid #f87171; padding-right: 10px; }
.kb-app[dir="ltr"] .quick-review-box h3 { border-left: 3px solid #f87171; padding-left: 10px; }
.quick-overview-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(220px, 1fr)); gap: 1rem; margin-top: 1.5rem; }
.quick-overview-card { background-color: var(--bg-content); border: 1px solid var(--border-color); border-radius: 10px; padding: 1rem; }
.quick-overview-card h4 { font-size: 1rem; color: var(--color-link); margin-top: 0; margin-bottom: 0.5rem; font-weight: 700; }
.quick-overview-card p { font-size: 0.95rem; line-height: 1.6; margin: 0; color: var(--text-secondary); }

/* ========== تنسيق الوسائط (صور وفيديوهات) ========== */
.media-preview {
  display: block; position: relative; margin-bottom: 1rem;
  border-radius: 8px; overflow: hidden; border: 1px solid var(--border-color);
}
.media-preview img { display: block; width: 100%; height: auto; object-fit: cover; }
.media-caption {
  display: block; background-color: rgba(0, 0, 0, 0.6); color: var(--text-main);
  text-align: center; padding: 0.5rem; font-size: 0.85rem; position: absolute;
  bottom: 0; width: 100%; box-sizing: border-box;
}
.image-grid-2 { display: grid; grid-template-columns: 1fr 1fr; gap: 1.5rem; }

.grid-cards { display: grid; grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); gap: 1.5rem; margin: 1.5rem 0; }
.grid-item { background-color: rgba(255, 255, 255, 0.03); border: 1px solid var(--border-color); border-radius: 8px; padding: 1rem; }
.grid-item h4 { color: var(--color-highlight); font-size: 1.1rem; font-weight: 600; margin-top: 0; padding-bottom: 0.5rem; border-bottom: 1px solid var(--border-color); }

/* ========== NEW STYLES FOR COMPENSATION CASE ========== */
h4.step-heading { color: var(--text-main); font-weight: bold; margin: 2rem 0 0.75rem 0; font-size: 1.1rem; }
.grid-item.store-fault { background-color: rgba(34, 197, 94, 0.1); border-left: 4px solid #22c55e; }
.grid-item.store-fault h4 { color: #4ADE80; }
.grid-item.driver-fault { background-color: rgba(239, 68, 68, 0.1); border-left: 4px solid #ef4444; }
.grid-item.driver-fault h4 { color: #F87171; }
#ar-content .grid-item.store-fault { border-left: 0; border-right: 4px solid #22c55e; }
#ar-content .grid-item.driver-fault { border-left: 0; border-right: 4px solid #ef4444; }

/* Calculator styles */
.calculator-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1.5rem; align-items: end; margin-top: 1.5rem; }
.calculator-grid .form-group { margin: 0; }
.calculator-grid label { display: block; margin-bottom: 0.5rem; font-weight: 500; color: var(--text-secondary); }
.calculator-grid input[type="time"] { width: 100%; padding: 0.6rem; background-color: var(--bg-main); border: 1px solid var(--border-color); color: white; border-radius: 8px; font-size: 1.1rem; }
.order-type-chooser { display: flex; gap: 1rem; }
.order-type-chooser label { flex-grow: 1; }
.order-type-chooser input[type="radio"] { display: none; }
.order-type-chooser span { display: block; text-align: center; padding: 0.6rem; border: 1px solid var(--border-color); border-radius: 8px; cursor: pointer; transition: all 0.2s; }
.order-type-chooser input:checked+span { background-color: var(--color-pill); color: white; border-color: var(--color-pill); font-weight: bold; }

.recommendation-wrapper { position: relative; }
.recommendation-box { margin-top: 1.5rem; padding: 1.25rem; border-radius: 8px; line-height: 1.6; border-left: 4px solid; }
.recommendation-box.success { background-color: rgba(34, 197, 94, 0.1); border-color: #22c55e; color: #86efac; }
.recommendation-box.info { background-color: rgba(59, 130, 246, 0.1); border-color: #3b82f6; color: #93c5fd; }
.recommendation-box.error { background-color: rgba(239, 68, 68, 0.1); border-color: #ef4444; color: #fca5a5; }
#ar-content .recommendation-box { border-left: 0; border-right: 4px solid; }
#ar-content .recommendation-box.success { border-right-color: #22c55e; }
#ar-content .recommendation-box.info { border-right-color: #3b82f6; }
#ar-content .recommendation-box.error { border-right-color: #ef4444; }

.copy-btn { position: absolute; top: 1.75rem; right: 1rem; background: var(--bg-level-box); border: 1px solid var(--border-color); color: var(--text-main); padding: 0.3rem 0.6rem; border-radius: 6px; cursor: pointer; transition: all 0.2s; }
.copy-btn:hover { background: var(--color-pill); }
#ar-content .copy-btn { right: auto; left: 1rem; }

/* Compensation Matrix Styles */
.compensation-box h4 { border-bottom: 1px solid var(--border-color); display: flex; align-items: center; gap: 0.75rem; }
.compensation-box.fast-order { border-top: 4px solid #22c55e; }
.compensation-box.fast-order h4 { color: #4ade80; }
.compensation-box.scheduled-order { border-top: 4px solid #fbbf24; }
.compensation-box.scheduled-order h4 { color: #fcd34d; }
.compensation-box li { display: flex; justify-content: space-between; padding: 0.7rem 0; border-bottom: 1px solid var(--border-color); }
.compensation-box li:last-child { border-bottom: none; }
.compensation-box li span:first-child { color: var(--text-secondary); }
.compensation-box li .action { font-weight: bold; color: var(--text-main); }
#ar-content .compensation-box li .action { text-align: left !important; }

/* Language visibility control */
.kb-app[dir="ltr"] #ar-content { display: none; }
.kb-app[dir="ltr"] #en-content { display: block; }
.kb-app[dir="rtl"] #en-content { display: none; }
.kb-app[dir="rtl"] #ar-content { display: block; }

/* Visual toggle section styling */
.visual-guide { display: none; margin-top: 1rem; border-top: 1px solid var(--border-color); padding-top: 1rem; }
.toggle-visual { background: var(--color-pill); color: white; border: none; padding: 8px 14px; border-radius: 9999px; cursor: pointer; font-weight: 600; margin: 12px 0 0 0; display: inline-block; font-family: var(--font-family); transition: all 0.2s; }
.toggle-visual:hover { background: #5b21aa; }
3. js.txt (New Unified JavaScript)
This script combines the language toggle, lightbox, visual guide toggles, and the new calculator functionality into a single, cohesive file that can be loaded for this case.
code
JavaScript
/*
  Unified script for InfiniBase Cases
  - Handles language toggling.
  - Manages lightboxes for images.
  - Controls visual guide section visibility.
  - Powers the interactive delay calculator.
  - Lazy loads media for performance.
*/

(function () {
    const APP_SELECTOR = '.kb-app';

    // ===== Lightbox Functions =====
    function openLightbox(imageUrl) {
        let overlay = document.getElementById('kb-lightbox-overlay');
        if (!overlay) {
            overlay = document.createElement('div');
            overlay.id = 'kb-lightbox-overlay';
            overlay.style.cssText = 'position:fixed; inset:0; background:rgba(0,0,0,0.8); display:flex; align-items:center; justify-content:center; z-index:2000; cursor:pointer;';
            overlay.innerHTML = '<img id="kb-lightbox-img" style="max-width:90%; max-height:90%; border-radius:8px;">';
            document.body.appendChild(overlay);
            overlay.addEventListener('click', () => closeLightbox());
        }
        document.getElementById('kb-lightbox-img').src = imageUrl;
        overlay.style.display = 'flex';
        document.body.style.overflow = 'hidden';
    }

    function closeLightbox() {
        const overlay = document.getElementById('kb-lightbox-overlay');
        if (overlay) overlay.style.display = 'none';
        document.body.style.overflow = '';
    }
    
    // ===== Lazy Loading for Media =====
    function lazyLoadMedia() {
        const lazyMedia = document.querySelectorAll(`${APP_SELECTOR} img[data-src]`);
        if ('IntersectionObserver' in window) {
            const mediaObserver = new IntersectionObserver((entries, observer) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        const media = entry.target;
                        media.src = media.getAttribute('data-src');
                        media.removeAttribute('data-src');
                        observer.unobserve(media);
                    }
                });
            });
            lazyMedia.forEach(media => mediaObserver.observe(media));
        } else {
            lazyMedia.forEach(media => {
                media.src = media.getAttribute('data-src');
            });
        }
    }
    
    // ===== Language Toggle Function =====
    function toggleLanguage() {
      const button = document.getElementById("lang-toggle-button");
      const appWrapper = document.querySelector(APP_SELECTOR);
      if (!button || !appWrapper) return;

      const isArabicActive = appWrapper.getAttribute('dir') === 'rtl';

      if (isArabicActive) {
        appWrapper.setAttribute('dir', 'ltr');
        button.textContent = "التحويل للعربية";
      } else {
        appWrapper.setAttribute('dir', 'rtl');
        button.textContent = "Switch to English";
      }
      window.scrollTo({ top: 0, behavior: "smooth" });
    }

    // ===== Delay Calculator Logic =====
    function setupCalculator(lang) {
        const langSuffix = lang === 'ar' ? 'Ar' : 'En';
        const estInput = document.getElementById(`estTimeInput${langSuffix}`);
        const actInput = document.getElementById(`actTimeInput${langSuffix}`);
        const orderTypeRadios = document.querySelectorAll(`input[name="orderType${langSuffix}"]`);
        const recommendationBox = document.getElementById(`recommendationBox${langSuffix}`);
        const recommendationTextElem = document.getElementById(`recommendationText${langSuffix}`);
        const copyBtn = document.getElementById(`copyBtn${langSuffix}`);

        if (!estInput || !actInput || !recommendationBox || !copyBtn) return;

        let currentRecommendationText = '';
        if (recommendationTextElem) recommendationTextElem.parentElement.classList.add('info');

        const calculateDelay = () => {
            const estTime = estInput.value;
            const actTime = actInput.value;
            if (!estTime || !actTime) {
                if (recommendationTextElem) {
                    recommendationTextElem.innerHTML = lang === 'en' 
                        ? 'Enter the estimated and actual times to see the recommended compensation.' 
                        : 'أدخل الوقت المتوقع والفعلي لعرض توصية التعويض المناسبة.';
                    recommendationBox.className = 'recommendation-box info';
                }
                return;
            }

            const orderType = document.querySelector(`input[name="orderType${langSuffix}"]:checked`).value;
            const time1 = new Date(`1970-01-01T${estTime}:00`);
            const time2 = new Date(`1970-01-01T${actTime}:00`);
            const diffMins = Math.round((time2 - time1) / 60000);

            let message = ''; let rawMessage = ''; let boxClass = 'info';

            if (diffMins < 0) {
                message = lang === 'en' ? '<strong>Error:</strong> Actual time cannot be before estimated time.' : '<strong>خطأ:</strong> الوقت الفعلي لا يمكن أن يكون قبل الوقت المتوقع.';
                boxClass = 'error'; rawMessage = 'Error: Invalid time input.';
            } else if (diffMins <= 15) {
                message = lang === 'en' ? `<strong>Delay: ${diffMins} mins.</strong> An apology is sufficient. No compensation required.` : `<strong>مدة التأخير: ${diffMins} دقيقة.</strong> يكتفى بالاعتذار للعميل. لا يتطلب تعويض.`;
                boxClass = 'info'; rawMessage = `Delay of ${diffMins} mins. Apologized. No compensation.`;
            } else {
                boxClass = 'success';
                if (orderType === 'fast') {
                    if (diffMins <= 30) { message = lang === 'en' ? 'Compensate: <strong>Delivery Fees only</strong>.' : 'التعويض: <strong>رسوم التوصيل فقط</strong>.'; rawMessage = 'Compensated with Delivery Fees only.'; }
                    else if (diffMins <= 45) { message = lang === 'en' ? 'Compensate: <strong>Delivery + 25% of chef total</strong>.' : 'التعويض: <strong>التوصيل + 25% من قيمة الطلب</strong>.'; rawMessage = 'Compensated with Delivery + 25% of chef total.'; }
                    else if (diffMins <= 60) { message = lang === 'en' ? 'Compensate: <strong>Delivery + 50% of chef total</strong>.' : 'التعويض: <strong>التوصيل + 50% من قيمة الطلب</strong>.'; rawMessage = 'Compensated with Delivery + 50% of chef total.'; }
                    else { message = lang === 'en' ? 'Compensate: <strong>Full Order Amount</strong>.' : 'التعويض: <strong>كامل قيمة الطلب</strong>.'; rawMessage = 'Compensated with Full Order Amount.'; }
                } else { // Scheduled
                    if (diffMins <= 60) { message = lang === 'en' ? 'Compensate: <strong>50% to 100% of the order</strong>.' : 'التعويض: <strong>50% إلى 100% من قيمة الطلب</strong>.'; rawMessage = 'Compensated with 50%-100% of order.'; }
                    else { message = lang === 'en' ? 'Compensate: <strong>Full Amount + 50 SAR credit</strong>.' : 'التعويض: <strong>كامل المبلغ + 50 ريال كرصيد</strong>.'; rawMessage = 'Compensated with Full Amount + 50 SAR.'; }
                }
            }
            if(recommendationTextElem) recommendationTextElem.innerHTML = message;
            currentRecommendationText = rawMessage;
            if(recommendationBox) {
                recommendationBox.className = 'recommendation-box';
                recommendationBox.classList.add(boxClass);
            }
        };

        [estInput, actInput, ...orderTypeRadios].forEach(el => el.addEventListener('input', calculateDelay));
        copyBtn.addEventListener('click', () => {
            navigator.clipboard.writeText(currentRecommendationText).then(() => {
                const originalText = copyBtn.innerHTML;
                copyBtn.innerHTML = lang === 'en' ? 'Copied!' : 'تم النسخ!';
                setTimeout(() => { copyBtn.innerHTML = originalText; }, 1500);
            });
        });
    }

    // ===== Initialization Function =====
    function init() {
        lazyLoadMedia();
        setupCalculator('en');
        setupCalculator('ar');
    }

    // Run init on load
    if (document.readyState === 'complete' || document.readyState === 'interactive') {
        setTimeout(init, 0);
    } else {
        document.addEventListener('DOMContentLoaded', init);
    }

    // ====== EVENT LISTENERS (Delegated for performance) ======
    document.addEventListener('click', function (e) {
        const target = e.target;
        
        // --- Language Toggle Button ---
        if (target.closest('#lang-toggle-button')) {
            toggleLanguage();
            return;
        }

        // --- Visual guide toggle buttons ---
        const toggleBtn = target.closest('.toggle-visual');
        if (toggleBtn) {
            const guide = toggleBtn.nextElementSibling;
            if (guide && guide.classList.contains('visual-guide')) {
                const isHidden = guide.style.display === 'none' || guide.style.display === '';
                guide.style.display = isHidden ? 'grid' : 'none'; // Use grid for image grids
                 if (isHidden) guide.scrollIntoView({ behavior:'smooth', block: 'center' });
            }
            return;
        }

        // --- Image click for lightbox ---
        const imgPreview = target.closest('.media-preview img');
        if (imgPreview && imgPreview.src) {
            e.preventDefault();
            openLightbox(imgPreview.src);
            return;
        }
    }, true);
    
    // --- Close lightbox on ESC key ---
    document.addEventListener('keydown', (e) => {
        if (e.key === "Escape") closeLightbox();
    });

})();
