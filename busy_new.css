/* ========== الخطوط والألوان العامة (Design Tokens) ========== */
:root {
  --bg-main: #0b1220;
  --bg-content: #0f1724;
  --bg-quick-review: #0d1320;
  --bg-level-box: #1e2d42;
  --text-main: #e6eef8;
  --text-secondary: #9ca3af;
  --color-link: #c7d2fe;
  --color-pill: #6d28d9;
  --color-highlight: #93c5fd;
  --border-color: #1e293b;
  --font-family: 'Cairo', sans-serif;
}

/* تطبيق الخلفية والخط الأساسي على الحاوية الرئيسية (Full Width) */
.kb-app {
  font-family: var(--font-family);
  background-color: var(--bg-main);
  color: var(--text-main);
  padding: 0;
  margin: 0;
  width: 100%;
  box-sizing: border-box;
  font-size: 15px;
}

/* HIDE SCROLLBAR AS REQUESTED */
.kb-app::-webkit-scrollbar { 
  display: none; 
}


/* FIX: Full-width background and content container (REQUEST 2) */
.kb-container {
  width: 100%;
  max-width: none;
  margin: 0;
  padding: 20px;
  box-sizing: border-box;
}

/* Keyframes for Fade-in Up Effect */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fade-in {
  animation: fadeInUp 0.6s ease-out forwards;
}


/* ========== تنسيق البانر وزر اللغة ========== */
.header-banner {
  width: 100%;
  padding: 1rem 0;
  margin-bottom: 1.5rem;
  box-sizing: border-box;
}

.header-banner img {
  width: 220px;
  height: auto;
  margin: 0 auto;
  display: block;
  border-radius: 8px;
}

.language-toggle-wrapper {
  margin: 0 auto 1.5rem auto;
  padding: 0 1.5rem;
  text-align: center;
}

#lang-toggle-button {
  display: inline-block;
  margin: 1rem auto;
  padding: 0.7rem 1.5rem;
  font-weight: 700;
  font-family: var(--font-family);
  border-radius: 9999px;
  background-color: #3b82f6;
  color: #fff !important;
  text-align: center;
  transition: 0.2s;
  border: none;
  cursor: pointer;
  box-shadow: 0 2px 8px rgba(0,0,0,0.2);
}
#lang-toggle-button:hover { 
  background-color: #2563eb; 
  transform: translateY(-2px); 
}


/* ========== تنسيق العناوين والنص ========== */
.kb-app h1 { display: none; }

.kb-app h2 {
  font-size: 1.2rem;
  font-weight: 700;
  color: var(--color-highlight);
  margin: 2rem 0 1rem 0;
  padding: 0.5rem 0;
  border-bottom: 1px solid rgba(255, 255, 255, 0.08);
}

.kb-app h3 {
  font-size: 1.1rem;
  font-weight: 600;
  color: var(--text-main);
  margin: 1.5rem 0 1rem 0;
  padding: 0.5rem 0;
  border-right: 3px solid var(--color-pill);
  padding-right: 10px;
}

.level-heading-box {
  background-color: var(--bg-level-box);
  border: 1px solid var(--border-color);
  border-radius: 8px;
  padding: 1rem;
  margin: 2rem 0 1.5rem 0;
}

.level-heading-box h3 {
  margin: 0;
  padding: 0;
  border: none;
  font-size: 1.2rem;
  color: var(--color-highlight);
}

.kb-app[dir="rtl"] .level-heading-box h3 {
  border-right: 3px solid var(--color-highlight);
  padding-right: 10px;
}
.kb-app[dir="ltr"] .level-heading-box h3 {
  border-left: 3px solid var(--color-highlight);
  padding-left: 10px;
}

.kb-app p, .kb-app li {
  font-size: 16px;
  line-height: 1.8;
  font-weight: 400; /* Increased from thin */
  color: #e6eef8;
  margin: 0 0 1rem 0;
}


.kb-app .note {
  font-size: 0.95rem;
  color: var(--text-secondary);
  font-style: italic;
  display: block;
  margin-top: 1rem;
  padding: 1rem;
  border-radius: 6px;
  background-color: rgba(156, 163, 175, 0.05);
}

.kb-app a {
  color: var(--color-link);
  text-decoration: none;
  transition: color 0.3s;
}
.kb-app a:hover {
  color: #a5b4fc;
  text-decoration: underline;
}

/* ========== تنسيق البطاقات والقوائم ========== */
.kb-card {
  background-color: var(--bg-content);
  border: 1px solid var(--border-color);
  border-radius: 12px;
  padding: 1.5rem;
  margin: 0 auto 2rem auto;
  box-shadow: 0 3px 8px rgba(0,0,0,0.15);
}

.kb-app ul { list-style-type: none; padding: 0; margin: 1rem 0; }
.kb-card ul li { position: relative; margin-bottom: 0.75rem; }

.ar-content ul li::before {
  content: "•"; color: var(--color-link); font-weight: bold;
  display: inline-block; width: 1em; margin-right: -1em; position: absolute; right: 0; top: 0;
}
.ar-content ul li { padding-right: 1.5rem; }

.en-content ul li::before {
  content: "•"; color: var(--color-link); font-weight: bold;
  display: inline-block; width: 1em; margin-left: -1em; position: absolute; left: 0; top: 0;
}
.en-content ul li { padding-left: 1.5rem; }

/* ========== صندوق المراجعة السريعة (Quick Overview) ========== */
.quick-review-box {
  background-color: var(--bg-quick-review);
  border: 1px solid rgba(255, 255, 255, 0.15);
  border-radius: 12px;
  padding: 1.5rem;
  margin: 0 auto 2rem auto;
}
.quick-review-box h3 { margin-top: 0; padding-top: 0; border-right: 3px solid #f87171; color: #f87171; }
.quick-overview-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(220px, 1fr)); gap: 1rem; margin-top: 1.5rem; }
.quick-overview-card { background-color: var(--bg-content); border: 1px solid var(--border-color); border-radius: 10px; padding: 1rem; }
.quick-overview-card h4 { font-size: 1rem; color: var(--color-link); margin-top: 0; margin-bottom: 0.5rem; font-weight: 700; }
.quick-overview-card p { font-size: 0.95rem; line-height: 1.6; margin: 0; color: var(--text-secondary); }

/* ========== تنسيق الأيقونات والروابط (Pills) ========== */
.pill-link {
  background-color: var(--color-pill); color: var(--text-main) !important; padding: 0.4rem 1rem; border-radius: 25px;
  font-size: 0.85rem; font-weight: 600; white-space: nowrap; transition: background-color 0.3s, transform 0.1s;
  display: inline-block; margin: 4px;
}
.pill-link:hover { background-color: #5b21aa; text-decoration: none; transform: translateY(-1px); }

/* ========== تنسيق الوسائط (صور وفيديوهات) ========== */
/* NEW: Video Thumbnail Grid */
.video-thumbnail-grid { display: flex; gap: 1rem; margin-top: 1rem; flex-wrap: wrap; }
.video-thumbnail {
    flex: 1; min-width: 120px; background-color: #1e2d42; border-radius: 8px; padding: 1rem;
    text-align: center; color: var(--text-main); text-decoration: none;
    border: 1px solid var(--border-color); transition: all 0.2s ease;
}
.video-thumbnail:hover { transform: translateY(-3px); background-color: #2a3e5c; box-shadow: 0 4px 10px rgba(0,0,0,0.3); }
.video-thumbnail .play-icon { font-size: 1.5rem; display: block; color: #a5b4fc; }
.video-thumbnail .video-title { font-size: 0.85rem; font-weight: 600; display: block; margin-top: 0.5rem; }

.grid-cards { display: grid; grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); gap: 1.5rem; margin: 1.5rem 0; }
.grid-item { background-color: rgba(255, 255, 255, 0.03); border: 1px solid var(--border-color); border-radius: 8px; padding: 1rem; }
.grid-item h4 { color: var(--color-highlight); font-size: 1rem; font-weight: 600; margin-top: 0; padding-bottom: 0.5rem; border-bottom: 1px solid var(--border-color); }

/* ========== Lightbox/Modal ========== */
.css-lightbox { position: fixed; top: 0; left: 0; width: 100%; height: 100%; display: none; z-index: 1000; }
.css-lightbox.active { display: block; }
.lightbox-overlay { position: absolute; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.7); backdrop-filter: blur(8px); cursor: pointer; }
.lightbox-content {
  position: relative; z-index: 1001; background-color: var(--bg-content); border: 1px solid var(--border-color);
  border-radius: 12px; padding: 20px; margin: 5vh auto; width: 90%; max-width: 900px;
  max-height: 90vh; overflow-y: auto; box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
  animation: zoomIn 0.3s ease-out;
}
@keyframes zoomIn { from { transform: scale(0.9); opacity: 0.5; } to { transform: scale(1); opacity: 1; } }
.lightbox-content::-webkit-scrollbar { display: none; } /* Hide scrollbar but allow scrolling */
.lightbox-content { -ms-overflow-style: none; scrollbar-width: none; }

.lightbox-content img, .lightbox-content video { max-width: 100%; height: auto; display: block; margin: 15px auto; border-radius: 8px; }
.lightbox-content h3 { color: var(--color-highlight); border: none; margin: 0 0 1rem 0; }
.lightbox-close { position: absolute; top: 10px; font-size: 30px; font-weight: bold; color: var(--text-secondary); text-decoration: none; transition: color 0.3s; z-index: 1002; }
.lightbox-close:hover { color: var(--color-link); text-decoration: none; }

/* RTL/LTR Adjustments */
.kb-app[dir="rtl"] .lightbox-close { right: auto; left: 15px; }
.kb-app[dir="ltr"] .lightbox-close { left: auto; right: 15px; }
.kb-app[dir="rtl"] .note { border-left: none; border-right: 4px solid var(--color-link); }
.kb-app[dir="ltr"] .note { border-right: none; border-left: 4px solid var(--color-link); }
.kb-app[dir="ltr"] .level-heading-box h3 { border-left: 3px solid var(--color-highlight); padding-left: 10px; border-right: none; padding-right: 0; }
.kb-app[dir="ltr"] .quick-review-box h3 { border-left: 3px solid #f87171; padding-left: 10px; border-right: none; padding-right: 0; }


/* ========== NEW & MODIFIED STYLES ========== */

/* Language visibility control */
.kb-app.show-en #en-content { display: block; }
.kb-app.show-en #ar-content { display: none; }
.kb-app.show-ar #ar-content { display: block; }
.kb-app.show-ar #en-content { display: none; }

/* Style for crucial warning notes */
.note-box-warning { background: rgba(239, 68, 68, 0.1); border: 1px solid #ef4444; padding: 0.8rem 1rem; border-radius: 8px; color: #fca5a5; margin: 1rem 0; font-weight: 600; }
.kb-app[dir="ltr"] .note-box-warning { border-right: 1px solid #ef4444; border-left: 4px solid #ef4444; }
.kb-app[dir="rtl"] .note-box-warning { border-left: 1px solid #ef4444; border-right: 4px solid #ef4444; }

/* Style for "See guide below" text */
.see-guide { text-align: center; font-weight: 500; color: #c7d2fe; margin: 1.5rem 0; font-size: 1rem; }
.see-guide span { display: inline-block; transform: translateY(2px); margin-left: 5px; }
.kb-app[dir="rtl"] .see-guide span { margin-left: 0; margin-right: 5px; }

/* Style for related article reference note */
.note-ref { font-size: 1em; color: var(--text-secondary); margin-top: 0.75rem; padding: 0.75rem 1rem; background-color: rgba(30, 45, 66, 0.5); border-radius: 6px; }
.kb-app[dir="ltr"] .note-ref { border-left: 3px solid var(--color-pill); }
.kb-app[dir="rtl"] .note-ref { border-right: 3px solid var(--color-pill); }

/* Link buttons (VIP sheet links etc.) */
.link-btn {
  background-color: #3b82f6; color: #fff !important; border-radius: 9999px; padding: 6px 14px;
  font-size: 14px; font-weight: 600; text-decoration: none; display: inline-block;
  margin: 4px; box-shadow: 0 2px 8px rgba(0,0,0,0.12); transition: transform .14s ease, background-color .14s ease;
}
.link-btn:hover { transform: translateY(-2px); background-color: #2563eb; }

/* Visual toggle section styling */
.visual-guide { display: none; margin-top: 1rem; border-top: 1px solid var(--border-color); padding-top: 1rem; }
.visual-guide img { width: 100%; border-radius: 8px; }
.toggle-visual {
  background: var(--color-pill); color: white; border: none; padding: 8px 14px; border-radius: 9999px;
  cursor: pointer; font-weight: 600; margin: 12px 0 0 0; width: auto; display: inline-block; font-family: var(--font-family);
  transition: all 0.2s;
}
.toggle-visual.full-width { width: 100%; }
.toggle-visual:hover { background: #5b21aa; }

.center { text-align: center; }

/* Center slot feature modal content */
.slot-feature-section, .slot-feature-section h3, .slot-feature-section p { text-align: center; }```

---
### **3. `js.txt` (Updated JavaScript - `busy_new.js`)**

*   **Language Toggle:** The `toggleLanguage` function has been rewritten to use a more stable class-based system. It now toggles classes on the main container (`.kb-app`) instead of manipulating inline styles, resolving the blank page issue.
*   **Initialization:** The `initBusyNew` function now sets the default language (English) using this new class system.
*   **Event Listeners:** The code remains efficient, using event delegation for lightboxes and anchor links. The visual toggle logic is robust and will work with the updated HTML structure.

```javascript
/* busy_new.js
- Robust, works if content inserted after DOM load.
- Lazy loads images and videos for performance.
- Handles lightbox open/close via event delegation.
- Manages language switching via a reliable class-based toggle.
- Includes a safe initialization that runs after content is ready.
- Smooth scrolling for anchor links.
- Visual guide toggle functionality.
*/

(function () {
    const APP_SELECTOR = '.kb-app';

    // ===== Lightbox Functions =====
    window.openLightbox = function (targetId) {
        const lb = document.getElementById(targetId);
        if (!lb) return;
        lb.classList.add('active');
        document.body.style.overflow = 'hidden';
        const video = lb.querySelector('video');
        if (video && typeof video.play === 'function') {
            video.currentTime = 0; // Rewind video
            video.play().catch(() => {}); // Autoplay video in lightbox
        }
    };

    window.closeLightbox = function (targetId) {
        const lb = document.getElementById(targetId);
        if (!lb) return;
        lb.classList.remove('active');
        document.body.style.overflow = '';
        const video = lb.querySelector('video');
        if (video && typeof video.pause === 'function') {
            video.pause(); // Pause video when closing
        }
    };
    
    // ===== Lazy Loading for Media =====
    function lazyLoadMedia() {
        const lazyMedia = document.querySelectorAll(`${APP_SELECTOR} img[data-src], ${APP_SELECTOR} video[data-src]`);
        if ('IntersectionObserver' in window) {
            const mediaObserver = new IntersectionObserver((entries, observer) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        const media = entry.target;
                        media.src = media.getAttribute('data-src');
                        media.removeAttribute('data-src');
                        if (media.tagName === 'VIDEO') media.load();
                        observer.unobserve(media);
                    }
                });
            });
            lazyMedia.forEach(media => mediaObserver.observe(media));
        } else { // Fallback for older browsers
            lazyMedia.forEach(media => {
                media.src = media.getAttribute('data-src');
                media.removeAttribute('data-src');
            });
        }
    }
    
    // ===== Language Toggle Function (NEW Class-based method) =====
    function toggleLanguage() {
      const button = document.getElementById("lang-toggle-button");
      const appWrapper = document.querySelector(APP_SELECTOR);
      
      if (!button || !appWrapper) return;

      const isArabicActive = appWrapper.classList.contains('show-ar');

      if (isArabicActive) {
        // Switch to English
        appWrapper.classList.remove('show-ar');
        appWrapper.classList.add('show-en');
        appWrapper.setAttribute('dir', 'ltr');
        button.textContent = "التحويل للعربية";
      } else {
        // Switch to Arabic
        appWrapper.classList.remove('show-en');
        appWrapper.classList.add('show-ar');
        appWrapper.setAttribute('dir', 'rtl');
        button.textContent = "Switch to English";
      }
      window.scrollTo({ top: 0, behavior: "smooth" });
    }

    // ===== Initialization Function =====
    function initBusyNew() {
        const appWrapper = document.querySelector(APP_SELECTOR);
        if (appWrapper && !appWrapper.classList.contains('show-ar') && !appWrapper.classList.contains('show-en')) {
             // Set initial view to English by adding the class
            appWrapper.classList.add('show-en');
        }
        lazyLoadMedia();
    }
    
    // Expose init function to be called from HTML
    window.initBusyNew = initBusyNew;

    // Fallback if script loads before DOM is ready
    if (document.readyState === 'complete' || document.readyState === 'interactive') {
        setTimeout(initBusyNew, 0);
    } else {
        document.addEventListener('DOMContentLoaded', initBusyNew);
    }

    // ====== EVENT LISTENERS (Delegated for performance) ======
    document.addEventListener('click', function (e) {
        const target = e.target;
        
        // --- Lightbox close logic ---
        const overlay = target.closest('.lightbox-overlay');
        const closeBtn = target.closest('.lightbox-close');
        if (overlay || closeBtn) {
            const lb = target.closest('.css-lightbox');
            if (lb && lb.id) {
                closeLightbox(lb.id);
                e.preventDefault();
            }
            return;
        }

        // --- Smooth scroll for internal anchor links ---
        const anchor = target.closest('a[href^="#"]');
        if (anchor) {
            const href = anchor.getAttribute('href');
            if (!href || href === '#') return;
            try {
                const targetElement = document.querySelector(href);
                if (targetElement) {
                    e.preventDefault();
                    targetElement.scrollIntoView({ behavior: 'smooth', block: 'start' });
                }
            } catch (err) {
                console.error("Could not scroll to anchor:", err);
            }
            return;
        }

        // --- Visual guide toggle buttons ---
        const toggleBtn = target.closest('.toggle-visual');
        if (toggleBtn) {
            const guide = toggleBtn.nextElementSibling;
            if (guide && guide.classList.contains('visual-guide')) {
                const isHidden = guide.style.display === 'none' || guide.style.display === '';
                guide.style.display = isHidden ? 'block' : 'none';
                if (isHidden) {
                    // Lazy load image inside if not already loaded
                    const img = guide.querySelector('img[data-src]');
                    if (img) {
                        img.src = img.getAttribute('data-src');
                        img.removeAttribute('data-src');
                    }
                    guide.scrollIntoView({ behavior:'smooth', block: 'center' });
                }
            }
            return;
        }
        
        // --- Language Toggle Button ---
        if (target.closest('#lang-toggle-button')) {
            toggleLanguage();
            return;
        }

    }, true);
})();
