/* ========== Design Tokens ========== */
:root {
    --bg-main: #0b1220;
    --bg-content: #0f1724;
    --bg-quick-review: #0d1320;
    --bg-level-box: #1e2d42;
    --text-main: #e6eef8;
    --text-secondary: #9ca3af;
    --color-link: #c7d2fe;
    --color-pill: #6d28d9;
    --color-highlight: #93c5fd;
    --border-color: #1e293b;
    --font-family: 'Cairo', 'Inter', 'Segoe UI', Tahoma, Arial, sans-serif;
}

/* ========== General Layout ========== */
.kb-app {
    font-family: var(--font-family);
    background-color: var(--bg-main);
    color: var(--text-main);
    padding: 0;
    margin: 0;
    width: 100%;
    box-sizing: border-box;
    animation: fadeIn 0.8s ease-out;
}
@keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }

.kb-container {
    width: 100%;
    max-width: 1200px;
    padding: 1.5rem;
    margin: 0 auto;
    box-sizing: border-box;
}

/* ========== Header & Language Toggle ========== */
.header-banner {
    width: 100%;
    height: auto;
    max-height: 150px;
    overflow: hidden;
    margin-bottom: 1rem;
    background-color: var(--bg-content);
}
.header-banner img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.language-toggle-wrapper {
    text-align: center;
    padding: 0.5rem 1.5rem 1.5rem 1.5rem;
}
#lang-toggle-button {
    display: inline-block;
    cursor: pointer;
    background-color: #3b82f6;
    color: #fff !important;
    border: none;
    padding: 0.6rem 1.4rem;
    border-radius: 9999px;
    font-weight: 600;
    transition: all 0.2s;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
}
#lang-toggle-button:hover {
    background-color: #2563eb;
    transform: translateY(-2px);
}

/* ========== Typography ========== */
h1, h2, h3, h4 { margin: 0; padding: 0; font-weight: 700; }
.kb-app h1 { font-size: 1.8rem; }
.kb-app h2 { font-size: 1.5rem; }
.kb-app h3 { font-size: 1.2rem; }
.kb-app h4 { font-size: 1.05rem; color: var(--color-highlight); }

.kb-app p, .kb-app li {
    font-size: 0.98rem;
    line-height: 1.8;
    color: var(--text-main);
    font-weight: 400;
    margin-bottom: 0.75rem;
}
.kb-app .note {
    font-size: 0.92rem;
    color: var(--text-secondary);
    display: block;
    margin-top: 1.5rem;
    padding: 1rem;
    border-radius: 6px;
    background-color: rgba(156, 163, 175, 0.05);
    border-left: 4px solid var(--color-link);
}
.kb-app[dir="rtl"] .note {
    border-left: none;
    border-right: 4px solid var(--color-link);
}
.kb-app a { color: var(--color-link); text-decoration: none; }
.kb-app a:hover { text-decoration: underline; }

/* ========== Cards, Details & Lists ========== */
.kb-card {
    background-color: var(--bg-content);
    border: 1px solid var(--border-color);
    border-radius: 12px;
    padding: 1.5rem 2rem;
    margin-bottom: 1.5rem;
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    transition: all 0.3s ease;
}
details.kb-card { padding: 0; }
details > summary {
    list-style: none;
    cursor: pointer;
    padding: 1.5rem 2rem;
}
details > summary::-webkit-details-marker { display: none; }
details[open] > summary {
    border-bottom: 1px solid var(--border-color);
}
.kb-card > *:not(summary) {
    padding: 1.5rem 2rem;
}

.level-heading-box {
    padding: 0;
}
.level-heading-box h3 {
    margin: 0;
    padding: 0;
    color: var(--color-highlight);
}

.kb-app ul { list-style-type: none; padding: 0; margin-top: 1rem; }
.kb-app ul li { position: relative; padding-left: 1.75rem; }
.kb-app[dir="rtl"] ul li { padding-left: 0; padding-right: 1.75rem; }
.kb-app ul li::before {
    content: "•";
    color: var(--color-link);
    font-weight: bold;
    font-size: 1.2em;
    position: absolute;
    left: 0;
    top: 2px;
}
.kb-app[dir="rtl"] ul li::before { left: auto; right: 0; }
.kb-app[dir="rtl"] h1, .kb-app[dir="rtl"] h2, .kb-app[dir="rtl"] h3, .kb-app[dir="rtl"] h4, .kb-app[dir="rtl"] p { text-align: right; }
.kb-app[dir="rtl"] ul li { text-align: right; }

/* ========== Custom Sections ========== */
.guidance-box {
    background-color: rgba(30, 45, 66, 0.5);
    border-left: 4px solid var(--color-highlight);
    border-radius: 8px;
    padding: 1.25rem 1.5rem;
    margin-bottom: 2rem;
}
.kb-app[dir="rtl"] .guidance-box {
    border-left: none;
    border-right: 4px solid var(--color-highlight);
}
.guidance-box h4 { color: var(--color-highlight); margin-bottom: 0.75rem; }
.guidance-box p { font-size: 0.95rem; margin-bottom: 0; line-height: 1.6; }


.quick-review-box {
    background-color: var(--bg-quick-review);
    border: 1px solid var(--border-color);
    border-radius: 12px;
    padding: 1.5rem;
    margin-bottom: 2rem;
}
.quick-review-box h3 { color: #f87171; border-left: 3px solid #f87171; padding-left: 10px; }
.kb-app[dir="rtl"] .quick-review-box h3 { border-left: none; border-right: 3px solid #f87171; padding-right: 10px; padding-left: 0; }
.quick-overview-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(240px, 1fr)); gap: 1rem; margin-top: 1.5rem; }
.quick-overview-card { background-color: var(--bg-content); border: 1px solid var(--border-color); border-radius: 10px; padding: 1rem; }
.quick-overview-card h4 { font-size: 1rem; color: var(--color-link); margin-bottom: 0.5rem; }
.quick-overview-card p { font-size: 0.9rem; line-height: 1.5; margin: 0; color: var(--text-secondary); }

/* ========== Grids ========== */
.grid-cards { display: grid; grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); gap: 1.5rem; margin-top: 1.5rem; }
.grid-cards-sequential { display: grid; grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); gap: 2.5rem 1.5rem; margin-top: 1.5rem; }
.grid-cards-sequential .grid-item { position: relative; }
@media (min-width: 600px) {
    .grid-cards-sequential .grid-item:not(:last-child)::after {
        content: '→'; position: absolute; font-size: 2rem; color: var(--border-color); top: 50%; transform: translateY(-50%); right: -2rem;
    }
    .kb-app[dir="rtl"] .grid-cards-sequential .grid-item:not(:last-child)::after {
        content: '←'; right: auto; left: -2rem;
    }
}
.grid-item { background-color: rgba(30, 45, 66, 0.3); border: 1px solid var(--border-color); border-radius: 8px; padding: 1.25rem; }
.grid-item h4 { margin-bottom: 1rem; padding-bottom: 0.75rem; border-bottom: 1px solid var(--border-color); }

/* ========== Media (Videos/Images) ========== */
.media-grid-internal {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
    margin-top: 1.5rem;
}
.media-preview {
    display: block;
    position: relative;
    border-radius: 8px;
    overflow: hidden;
    border: 1px solid var(--border-color);
    transition: all 0.3s;
    cursor: pointer;
    box-shadow: 0 2px 8px rgba(0,0,0,0.2);
}
.media-preview:hover { transform: translateY(-4px); box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3); }
.media-preview::before { /* Play icon overlay for videos */
    content: '▶'; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); font-size: 2rem; color: white; background-color: rgba(0,0,0,0.4); border-radius: 50%; width: 50px; height: 50px; display: flex; align-items: center; justify-content: center; opacity: 0.8; transition: opacity 0.3s; pointer-events: none;
}
.media-preview:hover::before { opacity: 1; }
.media-preview img { pointer-events: none; }
img.media-preview::before { display: none; } /* Hide icon for images */

.media-preview img, .media-preview video { display: block; width: 100%; height: auto; object-fit: cover; }
.media-caption { display: block; background: linear-gradient(to top, rgba(0,0,0,0.8), transparent); color: var(--text-main); text-align: center; padding: 1.5rem 0.5rem 0.5rem 0.5rem; font-size: 0.85rem; position: absolute; bottom: 0; width: 100%; }

/* ========== Lightbox/Modal ========== */
.css-lightbox { position: fixed; top: 0; left: 0; width: 100%; height: 100%; display: none; align-items: center; justify-content: center; z-index: 1000; }
.css-lightbox.active { display: flex; }
.lightbox-overlay { position: absolute; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.8); backdrop-filter: blur(8px); }
.lightbox-content {
    position: relative; z-index: 1001; background-color: var(--bg-content); border: 1px solid var(--border-color); border-radius: 12px;
    padding: 1rem; width: auto; max-width: 80vw; max-height: 90vh; overflow-y: auto;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5); animation: zoomIn 0.3s ease-out; display: flex; flex-direction: column;
}
@keyframes zoomIn { from { transform: scale(0.9); opacity: 0; } to { transform: scale(1); opacity: 1; } }

.lightbox-content.centered-text { text-align: center; }
.lightbox-content img, .lightbox-content video { max-width: 100%; max-height: 75vh; height: auto; display: block; margin: 0 auto; border-radius: 8px; }
.lightbox-content h3 { color: var(--color-highlight); margin-bottom: 1rem; padding: 0 1rem; }
.lightbox-close { position: absolute; top: 15px; right: 15px; font-size: 2.2rem; font-weight: bold; color: var(--text-secondary); text-decoration: none; z-index: 1002; line-height: 1; }
.lightbox-close:hover { color: var(--color-link); }

.lightbox-actions { padding: 1rem; text-align: center; }
.lightbox-download {
    display: inline-block; text-align: center; margin-top: 1rem; background-color: var(--color-pill);
    color: var(--text-main) !important; padding: 0.6rem 1.2rem; border-radius: 25px; font-size: 0.9rem;
    font-weight: 600; transition: background-color 0.3s;
}
.lightbox-download:hover { background-color: #5b21aa; text-decoration: none; }

/* ========== Back to Top Button ========== */
.back-to-top { text-align: center; margin-top: 2rem; }
.back-to-top a {
    background-color: #1a2333; border: 1px solid var(--border-color); color: var(--color-highlight) !important;
    padding: 0.5rem 1.5rem; border-radius: 25px; font-size: 0.9rem; font-weight: 600; transition: all 0.3s;
}
.back-to-top a:hover {
    background-color: var(--color-pill); color: var(--text-main) !important; text-decoration: none;
}
3. The Updated JavaScript (java script.txt)
This script is now more robust, handles the language switching with a scroll-to-top action, and intelligently manages internal links to open collapsed content sections before navigating.
code
JavaScript
/* busy_new.js - v2
Robust, works if content inserted after DOM load.

* lightbox open/close
* language switch (toggle) with smooth scroll
* back-to-top smooth scroll
* smart internal link handling (opens <details>)
* initialization that is safe whether script runs before/after content insertion
*/

(function () {

// ===== Lightbox =====
window.openLightbox = function (targetId) {
    const lb = document.getElementById(targetId);
    if (!lb) return;
    lb.classList.add('active');
    document.body.style.overflow = 'hidden';
    const v = lb.querySelector('video');
    if (v && typeof v.play === 'function') v.play().catch(()=>{});
};

window.closeLightbox = function (targetId) {
    const lb = document.getElementById(targetId);
    if (!lb) return;
    lb.classList.remove('active');
    document.body.style.overflow = '';
    const v = lb.querySelector('video');
    if (v && typeof v.pause === 'function') v.pause();
};

// ===== Language switch =====
function switchLanguage(lang) {
    const arContent = document.getElementById('ar-content');
    const enContent = document.getElementById('en-content');
    const langToggle = document.getElementById('lang-toggle-button');
    const appWrapper = document.querySelector('.kb-app');

    if (!arContent || !enContent || !langToggle || !appWrapper) return;

    if (lang === 'ar') {
        arContent.style.display = 'block';
        enContent.style.display = 'none';
        appWrapper.setAttribute('dir', 'rtl');
        langToggle.textContent = 'Switch to English';
        langToggle.setAttribute('data-lang', 'en');
    } else { // 'en'
        arContent.style.display = 'none';
        enContent.style.display = 'block';
        appWrapper.setAttribute('dir', 'ltr');
        langToggle.textContent = 'التحويل للعربية';
        langToggle.setAttribute('data-lang', 'ar');
    }
    // Scroll to top after switching
    window.scrollToTop();
}

window.toggleLanguage = function () {
    const langToggle = document.getElementById('lang-toggle-button');
    if (!langToggle) return;
    const nextLang = langToggle.getAttribute('data-lang') || 'ar';
    switchLanguage(nextLang);
};

// ===== Smooth scroll top =====
window.scrollToTop = function () {
    try { 
        window.scrollTo({ top: 0, behavior: 'smooth' }); 
    } catch (e) { 
        window.scrollTo(0, 0); 
    }
};

// ===== Attach event listeners =====
function attachDelegatedListeners() {
    document.addEventListener('click', function (e) {
        // Close lightbox on overlay or close button click
        const closeTrigger = e.target.closest('.lightbox-overlay, .lightbox-close');
        if (closeTrigger) {
            const lb = e.target.closest('.css-lightbox');
            if (lb && lb.id) {
                closeLightbox(lb.id);
                e.preventDefault();
            }
        }
        
        // Smart scroll for internal links
        const internalLink = e.target.closest('a.internal-link');
        if (internalLink && internalLink.hash) {
            const targetElement = document.querySelector(internalLink.hash);
            if (targetElement) {
                e.preventDefault();
                
                // Check if target is inside a closed <details> tag and open it
                const parentDetails = targetElement.closest('details');
                if (parentDetails && !parentDetails.open) {
                    parentDetails.open = true;
                }
                
                // Scroll to the element
                setTimeout(() => {
                   targetElement.scrollIntoView({ behavior: 'smooth', block: 'start' });
                }, 100); // Small delay to allow <details> to open
            }
        }
    }, true);
}

// ===== Initialization =====
function initBusyNew() {
    const langToggle = document.getElementById('lang-toggle-button');
    if (langToggle && !langToggle._busynew_attached) {
        langToggle.addEventListener('click', function (e) {
            e.preventDefault();
            window.toggleLanguage();
        });
        langToggle._busynew_attached = true;
    }

    // Set initial view to English if both blocks exist
    if (document.getElementById('ar-content') && document.getElementById('en-content')) {
        switchLanguage('en');
    }

    // Attach delegated listeners for close overlay etc. if not already attached
    if (!document._busynew_delegated) {
        attachDelegatedListeners();
        document._busynew_delegated = true;
    }
}

// Run on load or immediately if DOM is ready
if (document.readyState === 'complete' || document.readyState === 'interactive') {
    setTimeout(initBusyNew, 0);
} else {
    document.addEventListener('DOMContentLoaded', initBusyNew);
}

// Re-initialize if content is loaded dynamically (e.g., via AJAX/Mutation)
try {
    const mo = new MutationObserver(function (mutList) {
        for (const m of mutList) {
            if (m.addedNodes.length > 0) {
                 initBusyNew();
                 // We don't disconnect, to handle multiple dynamic loads
            }
        }
    });
    mo.observe(document.documentElement || document.body, { childList: true, subtree: true });
} catch (e) { /* Fails gracefully on older browsers */ }

// Expose init in case of manual call
window.initBusyNew = initBusyNew;

})();
